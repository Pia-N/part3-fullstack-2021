{"version":3,"sources":["services/personsdata.js","components/Button.js","components/Person.js","components/Persons.js","components/Form.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","create","newObject","post","update","id","put","remove","delete","Button","props","onClick","persons","setPersons","console","log","window","confirm","filter","person","handleClick","Person","name","number","Persons","showPersons","map","Form","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","Notification","message","notificationType","className","App","useState","setNewNumber","setNewName","newFilter","setNewFilter","errorMsg","setErrorMsg","setNotificationType","useEffect","then","response","data","length","toLowerCase","includes","event","target","preventDefault","personObject","existingPerson","find","every","concat","catch","error","setTimeout","updatePerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94440936.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\nconst personService = { getAll, create, update, remove }\n\nexport default personService","import React from 'react'\nimport personService from '../services/personsdata'\n\nconst handleClick = (props) => {\n  const { id, persons, setPersons } = props\n  console.log(\"nappi delete\");\n  console.log(id, \"id\");\n  console.log(setPersons, \"uusi tila\");\n  console.log(persons, \"tyypit\");\n\n  if (window.confirm(\"Do you really want to delete your information?\")) {\n    setPersons(persons.filter(person => person.id !== id))\n    return (\n      personService.remove(id)\n    )\n  }\n\n}\n\n\nconst Button = (props) => {\n\n  return (\n    <button onClick={() => handleClick(props)} >\n      Delete\n    </button>\n\n  )\n}\nexport default Button\n\n/*setErrorMsg (`'${id}' has been deleted`)\nsetNotificationType('notification')\nsetTimeout(() => {\nsetErrorMsg(null)\n}, 5000)\n})*/","import React from 'react'\nimport Button from './Button'\n\n\nconst Person = ({person,persons,setPersons}) => {\n    \n    return(   \n   \n    <div>\n        <p>{person.name} {person.number} </p>\n        <Button id = {person.id} persons = {persons} setPersons ={setPersons}/>\n    </div> \n    ) \n    \n}\n\nexport default Person","import React from 'react'\nimport Person from './Person.js'\n\nconst Persons = (props) => {\n    const {showPersons,persons,setPersons} = props\n    return (\n    showPersons.map ((person) => \n    <div key = {person.name}>\n        <Person person ={person} persons={persons} setPersons ={setPersons}/>\n   </div>\n    ))\n}\nexport default Persons","import React from 'react'\n\nconst Form = ({addPerson,newName,handleNameChange,newNumber,handleNumberChange}) => {\n\n  \n    return (\n     <form onSubmit = {addPerson}>\n      <div>name: <input value = {newName}\n      onChange = {handleNameChange} /> \n     <div>number: \n       <input value = {newNumber} \n      onChange ={handleNumberChange} />\n      </div>\n      <button type= \"submit\">add</button>\n      </div>\n    </form >\n    )\n}\nexport default Form","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n       \n      <div>Filter content: <input value = {props.value}\n        onChange = {props.onChange} /> \n      </div>  \n    )\n  }\n  export default Filter","import React from 'react'\n\nconst Notification = ({ message, notificationType }) => {\n    if (message === null) {\n      return null\n    }\n    if (notificationType === 'error') {\n    return (\n      <div className = \"error\">\n        {message}\n      </div>\n    )\n    }\n    if (notificationType === 'notification') {\n      return (\n        <div className = \"notification\">\n          {message}\n        </div>\n      )\n      }\n  }\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Form from './components/Form'\nimport Filter from './components/Filter'\nimport personService from './services/personsdata'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  //  state hookit, jotka säilyttävät muuttujan tilan ja mahdollistavat sen asettamisen\n  const [persons, setPersons] = useState([])\n  const [newNumber, setNewNumber] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMsg, setErrorMsg] = useState(null)\n  const [notificationType, setNotificationType] = useState('error')\n\n  // useEffect-hook, joka hakee datan \"palvelimelta\"\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n\n  const showPersons = newFilter.length === 0\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  //tapahtumakäsittelijä estää sivun uudelleenlataamisen \n  // sekä luo uuden henkilöolion joka tallennetaan staten kautta lomakkeeseen.\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log(\"nappia painettu\", event.target);\n    const personObject = {\n      name: newName,\n      number: newNumber\n      //id: Math.floor(Math.random() * 1000000)+1\n    }\n    const existingPerson = (persons.find(person => person.name.toLowerCase() === newName.toLowerCase()))\n\n    if (persons.every((person) => person.name.toLowerCase() !== newName.toLowerCase()))\n    //creating a new person\n    {\n      personService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setErrorMsg(`Person '${newName}' has been added `)\n          setNotificationType('notification')\n\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setNotificationType('error')\n          setErrorMsg(`${error.response.data.error}`)\n\n        })\n      setTimeout(() => {\n        setErrorMsg(null)\n      }, 5000)\n      setNewName('')\n      setNewNumber('')\n    }\n\n    // a number update\n    if (existingPerson) {\n\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one? `)) {\n        console.log(personObject, \"uudet tiedot\");\n        const updatePerson = { ...existingPerson, number: newNumber }\n\n        personService\n          .update(existingPerson.id, updatePerson)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : response.data))\n            setErrorMsg(`'${newName}' has been updated`)\n            setNotificationType('notification')\n            setTimeout(() => {\n              setErrorMsg(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMsg(`'${newName}' was already deleted from server`)\n            setNotificationType('error')\n            setPersons(persons.filter(person => person.id !== existingPerson.id))\n            setTimeout(() => {\n              setErrorMsg(null)\n            }, 5000)\n\n          })\n      }\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  // tämä funktio tarkkailee input-kenttien tilaa ja asettaa uuden arvon muuttujalle\n  // console.log(event.target.value), tämä tulostaa konsoliin mitä syöttökentässä lukee\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>\n        < Notification message={errorMsg} notificationType={notificationType} />\n      </div>\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      <h3>Add a new number</h3>\n      <Form addPerson={addPerson} newName={newName}\n        handleNameChange={handleNameChange} newNumber={newNumber}\n        handleNumberChange={handleNumberChange} setErrorMsg={setErrorMsg}\n        notificationType={notificationType} setNotificationType={setNotificationType} />\n\n      <h2>Numbers</h2>\n      <Persons showPersons={showPersons} persons={persons} setPersons={setPersons} />\n    </div>\n  )\n}\n\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './index.css'\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}