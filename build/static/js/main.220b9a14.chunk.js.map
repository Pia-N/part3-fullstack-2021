{"version":3,"sources":["services/personsdata.js","components/Button.js","components/Person.js","components/Persons.js","components/Form.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","create","newObject","post","update","id","put","remove","delete","Button","props","onClick","console","log","persons","setPersons","setErrorMsg","toDelete","find","person","window","confirm","name","then","filter","p","catch","setTimeout","deletePerson","Person","number","Persons","showPersons","map","Form","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","Notification","message","notificationType","className","App","useState","setNewNumber","setNewName","newFilter","setNewFilter","errorMsg","setNotificationType","useEffect","response","data","length","toLowerCase","includes","event","target","preventDefault","personObject","existingPerson","every","concat","error","updatePerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.220b9a14.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\nconst personService = { getAll, create, update, remove }\n\nexport default personService","import React from 'react'\nimport personService from '../services/personsdata'\n\n/* const handleClick = (props) => { */\n/*   const { id, persons, setPersons, setNotificationType, setErrorMsg } = props\n/*   const ok = window.confirm(\"Do you really want to delete your information?\")\n/*   console.log(\"nappi delete\"); */\n/*   console.log(id, \"id\"); */\n/*   console.log(setPersons, \"uusi tila\"); */\n/*   console.log(persons, \"tyypit\"); */\n/*  */\n/*   if (ok) { */\n/*     personService.remove(id) */\n/*       .then(() => { */\n/*         setPersons(persons.filter(person => person.id !== id)) */\n/*         setErrorMsg(`'Information has been deleted`) */\n/*         setNotificationType('error') */\n/*         setTimeout(() => { */\n/*           setErrorMsg(null) */\n/*         }, 5000) */\n/*       }) */\n/*  */\n/*   } */\n/* } */\n\n\nconst deletePerson = (props) => {\n  console.log(props, \"propsit deletest채\")\n  const { id, persons, setPersons, setErrorMsg } = props\n  const toDelete = persons.find(person => person.id === id)\n  const ok = window.confirm(`Delete ${toDelete.name}`)\n  if (ok) {\n    personService.remove(id)\n      .then(() => {\n        setPersons(persons.filter(p => p.id !== id))\n        setErrorMsg(`Deleted ${toDelete.name}`)\n      }).catch(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        setErrorMsg(`${toDelete.name} has already been removed`, 'error')\n      })\n    setTimeout(() => {\n      setErrorMsg(null)\n    }, 5000)\n  }\n}\n\n\n\nconst Button = (props) => {\n\n  return (\n    <button onClick={() => deletePerson(props)}>Delete</button>\n  )\n}\n/*const deletePerson = (props) => {\n  console.log(props, \"this is deletePerson props\")\n}\nconst Button = (props) => {\n  return (\n    <button onClick={() => deletePerson(props)}>Delete</button>\n  )\n}*/\n\nexport default Button\n\n\n","import React from 'react'\nimport Button from './Button'\n\n\nconst Person = ({ person, persons, setPersons, setErrorMsg }) => {\n\n    return (\n\n        <div>\n            <p>{person.name} {person.number} </p>\n            <Button id={person.id} persons={persons}\n                setPersons={setPersons} setErrorMsg={setErrorMsg} />\n        </div>\n    )\n\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person.js'\n\nconst Persons = (props) => {\n    const { showPersons, persons, setPersons, setErrorMsg } = props\n    return (\n        showPersons.map((person) =>\n            <div key={person.name}>\n                <Person person={person} persons={persons} setPersons={setPersons}\n                    setErrorMsg={setErrorMsg} />\n            </div>\n        ))\n}\nexport default Persons","import React from 'react'\n\nconst Form = ({addPerson,newName,handleNameChange,newNumber,handleNumberChange}) => {\n\n  \n    return (\n     <form onSubmit = {addPerson}>\n      <div>name: <input value = {newName}\n      onChange = {handleNameChange} /> \n     <div>number: \n       <input value = {newNumber} \n      onChange ={handleNumberChange} />\n      </div>\n      <button type= \"submit\">add</button>\n      </div>\n    </form >\n    )\n}\nexport default Form","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n       \n      <div>Filter content: <input value = {props.value}\n        onChange = {props.onChange} /> \n      </div>  \n    )\n  }\n  export default Filter","import React from 'react'\n\nconst Notification = ({ message, notificationType }) => {\n    if (message === null) {\n      return null\n    }\n    if (notificationType === 'error') {\n    return (\n      <div className = \"error\">\n        {message}\n      </div>\n    )\n    }\n    if (notificationType === 'notification') {\n      return (\n        <div className = \"notification\">\n          {message}\n        </div>\n      )\n      }\n  }\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Form from './components/Form'\nimport Filter from './components/Filter'\nimport personService from './services/personsdata'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  //  state hookit, jotka s채ilytt채v채t muuttujan tilan ja mahdollistavat sen asettamisen\n  const [persons, setPersons] = useState([])\n  const [newNumber, setNewNumber] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMsg, setErrorMsg] = useState(null)\n  const [notificationType, setNotificationType] = useState('error')\n\n  // useEffect-hook, joka hakee datan \"palvelimelta\"\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n\n  const showPersons = newFilter.length === 0\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  //tapahtumak채sittelij채 est채채 sivun uudelleenlataamisen \n  // sek채 luo uuden henkil철olion joka tallennetaan staten kautta lomakkeeseen.\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log(\"nappia painettu\", event.target);\n    const personObject = {\n      name: newName,\n      number: newNumber\n      //id: Math.floor(Math.random() * 1000000)+1\n    }\n    const existingPerson = (persons.find(person => person.name.toLowerCase() === newName.toLowerCase()))\n\n    if (persons.every((person) => person.name.toLowerCase() !== newName.toLowerCase()))\n    //creating a new person\n    {\n      personService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setErrorMsg(`Person '${newName}' has been added `)\n          setNotificationType('notification')\n\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setNotificationType('error')\n          setErrorMsg(`${error.response.data.error}`)\n          // p채채set k채siksi palvelimen palauttamaan virheilmoitusolioon n채in\n          //console.log(error.response.data.error)\n        })\n      setTimeout(() => {\n        setErrorMsg(null)\n      }, 5000)\n      setNewName('')\n      setNewNumber('')\n    }\n\n    // a number update\n    if (existingPerson) {\n\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one? `)) {\n        console.log(personObject, \"uudet tiedot\");\n        const updatePerson = { ...existingPerson, number: newNumber }\n\n        personService\n          .update(existingPerson.id, updatePerson)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : response.data))\n            setErrorMsg(`'${newName}' has been updated`)\n            setNotificationType('notification')\n            setTimeout(() => {\n              setErrorMsg(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMsg(`'${newName}' was already deleted from server`)\n            setNotificationType('error')\n            setPersons(persons.filter(person => person.id !== existingPerson.id))\n            setTimeout(() => {\n              setErrorMsg(null)\n            }, 5000)\n\n          })\n      }\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  // t채m채 funktio tarkkailee input-kenttien tilaa ja asettaa uuden arvon muuttujalle\n  // console.log(event.target.value), t채m채 tulostaa konsoliin mit채 sy철tt철kent채ss채 lukee\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>\n        < Notification message={errorMsg} notificationType={notificationType} />\n      </div>\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      <h3>Add a new number</h3>\n      <Form addPerson={addPerson} newName={newName}\n        handleNameChange={handleNameChange} newNumber={newNumber}\n        handleNumberChange={handleNumberChange} setErrorMsg={setErrorMsg}\n        notificationType={notificationType} setNotificationType={setNotificationType} />\n\n      <h2>Numbers</h2>\n      <Persons showPersons={showPersons} persons={persons}\n        setPersons={setPersons} setErrorMsg={setErrorMsg}\n      />\n    </div>\n  )\n}\n\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './index.css'\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}